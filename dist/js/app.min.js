/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n//import * as flsFunctions from \"./modules/functions.js\";\n//flsFunctions.thisTest();\n\n// 'use strict';\n\n// burger\n\nlet header_menu = document.querySelector('.menu__body');\nlet burger_icon = document.querySelector('.icon-menu');\nburger_icon.addEventListener('click', function (e) {\n  header_menu.classList.toggle('_active');\n  burger_icon.classList.toggle('_active');\n  document.body.classList.toggle('_lock');\n});\n\n// =========================================================\n\n// ibg\n\n// function ibg() {\n//     let ibg = document.querySelectorAll('._ibg');\n//     for (var i = 0; i < ibg.length; i++) {\n//       if (ibg[i].querySelector('img')) {\n//         ibg[i].style.backgroundImage = 'url(' + ibg[i].querySelector('img').getAttribute('src') + ')';\n//       }\n//     }\n//   }\n\n//   ibg();\n\n// =========================================================\n\n// smooth scroll\n// data-goto=\".main-slider\"\n\n// const menuLinks = document.querySelectorAll('.menu__link[data-goto]');\n// if (menuLinks.length > 0) {\n//   menuLinks.forEach((menuLink) => {\n//     menuLink.addEventListener('click', onMenuLinkClick);\n//   });\n\n//   function onMenuLinkClick(e) {\n//     const menuLink = e.target;\n//     if (menuLink.dataset.goto && document.querySelector(menuLink.dataset.goto)) {\n//       const gotoBlock = document.querySelector(menuLink.dataset.goto);\n//       const gotoBlockValue =\n//         gotoBlock.getBoundingClientRect().top + pageYOffset - document.querySelector('header').offsetHeight;\n\n//       if (burger_icon.classList.contains('_active')) {\n//         document.body.classList.remove('_lock');\n//         burger_icon.classList.remove('_active');\n//         header_menu.classList.remove('_active');\n//       }\n\n//       window.scrollTo({\n//         top: gotoBlockValue,\n//         behavior: 'smooth',\n//       });\n//       e.preventDefault();\n//     }\n//   }\n// }\n\n// =========================================================\n\n// Dynamic Adaptive\n// data-da=\".menu__body,767,1\"\n\nfunction DynamicAdapt(type) {\n  this.type = type;\n}\n\nDynamicAdapt.prototype.init = function () {\n  const _this = this;\n  // массив объектов\n  this.оbjects = [];\n  this.daClassname = '_dynamic_adapt_';\n  // массив DOM-элементов\n  this.nodes = document.querySelectorAll('[data-da]');\n\n  // наполнение оbjects объктами\n  for (let i = 0; i < this.nodes.length; i++) {\n    const node = this.nodes[i];\n    const data = node.dataset.da.trim();\n    const dataArray = data.split(',');\n    const оbject = {};\n    оbject.element = node;\n    оbject.parent = node.parentNode;\n    оbject.destination = document.querySelector(dataArray[0].trim());\n    оbject.breakpoint = dataArray[1] ? dataArray[1].trim() : '767';\n    оbject.place = dataArray[2] ? dataArray[2].trim() : 'last';\n    оbject.index = this.indexInParent(оbject.parent, оbject.element);\n    this.оbjects.push(оbject);\n  }\n\n  this.arraySort(this.оbjects);\n\n  // массив уникальных медиа-запросов\n  this.mediaQueries = Array.prototype.map.call(\n    this.оbjects,\n    function (item) {\n      return '(' + this.type + '-width: ' + item.breakpoint + 'px),' + item.breakpoint;\n    },\n    this\n  );\n  this.mediaQueries = Array.prototype.filter.call(this.mediaQueries, function (item, index, self) {\n    return Array.prototype.indexOf.call(self, item) === index;\n  });\n\n  // навешивание слушателя на медиа-запрос\n  // и вызов обработчика при первом запуске\n  for (let i = 0; i < this.mediaQueries.length; i++) {\n    const media = this.mediaQueries[i];\n    const mediaSplit = String.prototype.split.call(media, ',');\n    const matchMedia = window.matchMedia(mediaSplit[0]);\n    const mediaBreakpoint = mediaSplit[1];\n\n    // массив объектов с подходящим брейкпоинтом\n    const оbjectsFilter = Array.prototype.filter.call(this.оbjects, function (item) {\n      return item.breakpoint === mediaBreakpoint;\n    });\n    matchMedia.addListener(function () {\n      _this.mediaHandler(matchMedia, оbjectsFilter);\n    });\n    this.mediaHandler(matchMedia, оbjectsFilter);\n  }\n};\n\nDynamicAdapt.prototype.mediaHandler = function (matchMedia, оbjects) {\n  if (matchMedia.matches) {\n    for (let i = 0; i < оbjects.length; i++) {\n      const оbject = оbjects[i];\n      оbject.index = this.indexInParent(оbject.parent, оbject.element);\n      this.moveTo(оbject.place, оbject.element, оbject.destination);\n    }\n  } else {\n    for (let i = 0; i < оbjects.length; i++) {\n      const оbject = оbjects[i];\n      if (оbject.element.classList.contains(this.daClassname)) {\n        this.moveBack(оbject.parent, оbject.element, оbject.index);\n      }\n    }\n  }\n};\n\n// Функция перемещения\nDynamicAdapt.prototype.moveTo = function (place, element, destination) {\n  element.classList.add(this.daClassname);\n  if (place === 'last' || place >= destination.children.length) {\n    destination.insertAdjacentElement('beforeend', element);\n    return;\n  }\n  if (place === 'first') {\n    destination.insertAdjacentElement('afterbegin', element);\n    return;\n  }\n  destination.children[place].insertAdjacentElement('beforebegin', element);\n};\n\n// Функция возврата\nDynamicAdapt.prototype.moveBack = function (parent, element, index) {\n  element.classList.remove(this.daClassname);\n  if (parent.children[index] !== undefined) {\n    parent.children[index].insertAdjacentElement('beforebegin', element);\n  } else {\n    parent.insertAdjacentElement('beforeend', element);\n  }\n};\n\n// Функция получения индекса внутри родителя\nDynamicAdapt.prototype.indexInParent = function (parent, element) {\n  const array = Array.prototype.slice.call(parent.children);\n  return Array.prototype.indexOf.call(array, element);\n};\n\n// Функция сортировки массива по breakpoint и place\n// по возрастанию для this.type = min\n// по убыванию для this.type = max\nDynamicAdapt.prototype.arraySort = function (arr) {\n  if (this.type === 'min') {\n    Array.prototype.sort.call(arr, function (a, b) {\n      if (a.breakpoint === b.breakpoint) {\n        if (a.place === b.place) {\n          return 0;\n        }\n\n        if (a.place === 'first' || b.place === 'last') {\n          return -1;\n        }\n\n        if (a.place === 'last' || b.place === 'first') {\n          return 1;\n        }\n\n        return a.place - b.place;\n      }\n\n      return a.breakpoint - b.breakpoint;\n    });\n  } else {\n    Array.prototype.sort.call(arr, function (a, b) {\n      if (a.breakpoint === b.breakpoint) {\n        if (a.place === b.place) {\n          return 0;\n        }\n\n        if (a.place === 'first' || b.place === 'last') {\n          return 1;\n        }\n\n        if (a.place === 'last' || b.place === 'first') {\n          return -1;\n        }\n\n        return b.place - a.place;\n      }\n\n      return b.breakpoint - a.breakpoint;\n    });\n    return;\n  }\n};\n\nconst da = new DynamicAdapt('max');\nda.init();\n\n// =========================================================\n\n//Spoilers\nconst spollersArray = document.querySelectorAll('[data-spollers]');\nif (spollersArray.length > 0) {\n  //Получение обычных спойлеров\n  const spollersRegular = Array.from(spollersArray).filter(function (item, index, self) {\n    return !item.dataset.spollers.split(',')[0];\n  });\n\n  //Инициализация обычных спойлеров\n  if (spollersRegular.length > 0) {\n    initSpollers(spollersRegular);\n  }\n\n  //Получение спойлеров с медиа запросами\n  const spollersMedia = Array.from(spollersArray).filter(function (item, index, self) {\n    return item.dataset.spollers.split(',')[0];\n  });\n\n  //Инициализация спойлеров с медиа запросами\n  if (spollersMedia.length > 0) {\n    const breakpointsArray = [];\n    spollersMedia.forEach((item) => {\n      const params = item.dataset.spollers;\n      const breakpoint = {};\n      const paramsArray = params.split(',');\n      breakpoint.value = paramsArray[0];\n      breakpoint.type = paramsArray[1] ? paramsArray[1].trim() : 'max';\n      breakpoint.item = item;\n      breakpointsArray.push(breakpoint);\n    });\n\n    //Получаем уникальные брейкпоинты\n    let mediaQueries = breakpointsArray.map(function (item) {\n      return '(' + item.type + '-width: ' + item.value + 'px),' + item.value + ',' + item.type;\n    });\n    mediaQueries = mediaQueries.filter(function (item, index, self) {\n      return self.indexOf(item) === index;\n    });\n\n    //Работаем с каждым брейкпоинтом\n    mediaQueries.forEach((breakpoint) => {\n      const paramsArray = breakpoint.split(',');\n      const mediaBreakpoint = paramsArray[1];\n      const mediaType = paramsArray[2];\n      const matchMedia = window.matchMedia(paramsArray[0]);\n\n      //Объекты с нужными условиями\n      const spollersArray = breakpointsArray.filter(function (item) {\n        if (item.value === mediaBreakpoint && item.type === mediaType) {\n          return true;\n        }\n      });\n\n      //Событие\n      matchMedia.addEventListener('change', () => {\n        initSpollers(spollersArray, matchMedia);\n      });\n      initSpollers(spollersArray, matchMedia);\n    });\n  }\n\n  //Инициализация\n  function initSpollers(spollersArray, matchMedia = false) {\n    spollersArray.forEach((spollersBlock) => {\n      spollersBlock = matchMedia ? spollersBlock.item : spollersBlock;\n      if (matchMedia.matches || !matchMedia) {\n        spollersBlock.classList.add('_init');\n        initSpollerBody(spollersBlock);\n        spollersBlock.addEventListener('click', setSpollerAction);\n      } else {\n        spollersBlock.classList.remove('_init');\n        initSpollerBody(spollersBlock, false);\n        spollersBlock.removeEventListener('click', setSpollerAction);\n      }\n    });\n  }\n  //Работа с контентом\n  function initSpollerBody(spollersBlock, hideSpollerBody = true) {\n    const spollerTitles = spollersBlock.querySelectorAll('[data-spoller]');\n\n    if (spollerTitles.length > 0) {\n      spollerTitles.forEach((spollerTitle) => {\n        if (hideSpollerBody) {\n          spollerTitle.removeAttribute('tabindex');\n          if (!spollerTitle.classList.contains('_active')) {\n            spollerTitle.nextElementSibling.hidden = true;\n          }\n        } else {\n          spollerTitle.setAttribute('tabindex', '-1');\n          spollerTitle.nextElementSibling.hidden = false;\n        }\n      });\n    }\n  }\n  function setSpollerAction(e) {\n    const el = e.target;\n    if (el.hasAttribute('data-spoller') || el.closest('[data-spoller]')) {\n      const spollerTitle = el.hasAttribute('data-spoller') ? el : el.closest('[data-spoller]');\n      const spollersBlock = spollerTitle.closest('[data-spollers]');\n      const oneSpoller = spollersBlock.hasAttribute('data-one-spoller') ? true : false;\n      if (!spollersBlock.querySelectorAll('._slide').length) {\n        if (oneSpoller && !spollerTitle.classList.contains('_active')) {\n          hideSpollersBody(spollersBlock);\n        }\n        spollerTitle.classList.toggle('_active');\n        _slideToggle(spollerTitle.nextElementSibling, 500);\n      }\n      e.preventDefault();\n    }\n  }\n  function hideSpollersBody(spollersBlock) {\n    const spollerActiveTitle = spollersBlock.querySelector('[data-spoller]._active');\n    if (spollerActiveTitle) {\n      spollerActiveTitle.classList.remove('_active');\n      _slideUp(spollerActiveTitle.nextElementSibling, 500);\n    }\n  }\n}\n\nlet _slideUp = (target, duration = 500) => {\n  if (!target.classList.contains('_slide')) {\n    target.classList.add('_slide');\n    target.style.transitionProperty = 'height, margin, padding';\n    target.style.transitionDuration = duration + 'ms';\n    target.style.height = target.offsetHeight + 'px';\n    target.offsetHeight;\n    target.style.overflow = 'hidden';\n    target.style.height = 0;\n    target.style.paddingTop = 0;\n    target.style.paddingBottom = 0;\n    target.style.marginTop = 0;\n    target.style.marginBottom = 0;\n\n    window.setTimeout(() => {\n      target.hidden = true;\n      target.style.removeProperty('height');\n      target.style.removeProperty('padding-top');\n      target.style.removeProperty('padding-bottom');\n      target.style.removeProperty('margin-top');\n      target.style.removeProperty('margin-bottom');\n      target.style.removeProperty('overflow');\n      target.style.removeProperty('transition-duration');\n      target.style.removeProperty('transition-property');\n      target.classList.remove('_slide');\n    }, duration);\n  }\n};\n\nlet _slideDown = (target, duration = 500) => {\n  if (!target.classList.contains('_slide')) {\n    target.classList.add('_slide');\n    if (target.hidden) {\n      target.hidden = false;\n    }\n    let height = target.offsetHeight;\n    target.style.overflow = 'hidden';\n    target.style.height = 0;\n    target.style.paddingTop = 0;\n    target.style.paddingBottom = 0;\n    target.style.marginTop = 0;\n    target.style.marginBottom = 0;\n    target.offsetHeight;\n    target.style.transitionProperty = 'height, margin, padding';\n    target.style.transitionDuration = duration + 'ms';\n    target.style.height = height + 'px';\n    target.style.removeProperty('padding-top');\n    target.style.removeProperty('padding-bottom');\n    target.style.removeProperty('margin-top');\n    target.style.removeProperty('margin-bottom');\n\n    window.setTimeout(() => {\n      target.style.removeProperty('height');\n      target.style.removeProperty('overflow');\n      target.style.removeProperty('transition-duration');\n      target.style.removeProperty('transition-property');\n      target.classList.remove('_slide');\n    }, duration);\n  }\n};\n\nlet _slideToggle = (target, duration = 500) => {\n  if (target.hidden) {\n    return _slideDown(target, duration);\n  } else {\n    return _slideUp(target, duration);\n  }\n};\n\n// для родителя атрибут data-spollers\n// Для заголовка спойлера атрибут data-spoller\n// Медиа: data-spollers=\"992,max (or min)\"\n\n// если нужно показывать только один слайдер в блоке - добавляем атрибут data-one-spoller\n\n// Для родителя добавляется класс _init:\n// Для заголовка добавляется класс _active\n\n//popup\n// for popup link add class popup-link\n// for popup close icon add class close-popup\n// add lock-padding class to fixed objects\n\n// popup will close if click anywhere but not on content\n// if we use image add -> vertical align top\n\n// Popup will have class 'open'\n\nconst popupLinks = document.querySelectorAll('.popup-link');\n\nconst body = document.querySelector('body');\nconst lockPadding = document.querySelectorAll('.lock-padding');\n\nlet unlock = true;\nconst timeout = 800; //also like transition animation in styles (For non multi-click on popup button)\n\nif (popupLinks.length > 0) {\n  for (let index = 0; index < popupLinks.length; index++) {\n    const popupLink = popupLinks[index];\n\n    popupLink.addEventListener('click', function (e) {\n      const popupName = popupLink.getAttribute('href').replace('#', '');\n      const curentPopup = document.getElementById(popupName);\n\n      popupOpen(curentPopup);\n      e.preventDefault();\n    });\n  }\n}\n\nconst popupCloseIcon = document.querySelectorAll('.close-popup');\nif (popupCloseIcon.length > 0) {\n  for (let index = 0; index < popupCloseIcon.length; index++) {\n    const el = popupCloseIcon[index];\n    el.addEventListener('click', function (e) {\n      popupClose(el.closest('.popup'));\n      e.preventDefault();\n    });\n  }\n}\n\nfunction popupOpen(curentPopup) {\n  if (curentPopup && unlock) {\n    const popupActive = document.querySelector('.popup.open');\n    if (popupActive) {\n      popupClose(popupActive, false);\n    } else {\n      bodyLock();\n    }\n    curentPopup.classList.add('open');\n    curentPopup.addEventListener('click', function (e) {\n      if (!e.target.closest('.popup__content')) {\n        popupClose(e.target.closest('.popup'));\n      }\n    });\n  }\n}\n\nfunction popupClose(popupActive, doUnlock = true) {\n  if (unlock) {\n    popupActive.classList.remove('open');\n    if (doUnlock) {\n      bodyUnlock();\n    }\n  }\n}\n\nfunction bodyLock() {\n  const lockPaddingValue = window.innerWidth - document.querySelector('.wrapper').offsetWidth + 'px';\n\n  if (lockPadding.length > 0) {\n    for (let index = 0; index < lockPadding.length; index++) {\n      const el = lockPadding[index];\n      el.style.paddingRight = lockPaddingValue;\n    }\n  }\n\n  body.style.paddingRight = lockPaddingValue;\n  body.classList.add('_lock');\n\n  unlock = false;\n  setTimeout(function () {\n    unlock = true;\n  }, timeout);\n}\n\nfunction bodyUnlock() {\n  setTimeout(function () {\n    if (lockPadding.length > 0) {\n      for (let index = 0; index < lockPadding.length; index++) {\n        const el = lockPadding[index];\n        el.style.paddingRight = '0px';\n      }\n    }\n\n    body.style.paddingRight = '0px';\n    body.classList.remove('lock');\n  }, timeout);\n\n  unlock = false;\n  setTimeout(function () {\n    unlock = true;\n  }, timeout);\n}\n\ndocument.addEventListener('keydown', function (e) {\n  if (e.which === 27) {\n    const popupActive = document.querySelector('.popup.open');\n    popupClose(popupActive);\n  }\n});\n\n// Animation to show elements\n\n//class for all animated items: _anim-items\n//If you need to delay the animation, you can set the delay in css or with setTimeout\n// For animated item will add class _active\n// _anim-no-hide if emelemt have this class, element won't won't fade for animation\n// const animItems = document.querySelectorAll('._anim-items');\n\n// if (animItems.length > 0) {\n//   window.addEventListener('scroll', animOnScroll);\n\n//   function animOnScroll() {\n//     for (let index = 0; index < animItems.length; index++) {\n//       const animItem = animItems[index];\n//       const animItemHeight = animItem.offsetHeight;\n//       const animItemOffset = offset(animItem).top;\n//       const animStart = 4;\n\n//       let animItemPoint = window.innerHeight - animItemHeight / animStart;\n\n//       if (animItemHeight > window.innerHeight) {\n//         animItemPoint = window.innerHeight - animItemHeight / animStart;\n//       }\n\n//       if (\n//         pageYOffset > animItemOffset - animItemPoint &&\n//         pageYOffset < animItemOffset + animItemHeight\n//       ) {\n//         animItem.classList.add('_active');\n//       } else {\n//         if (!animItem.classList.contains('_anim-no-hide')) {\n//           animItem.classList.remove('_active');\n//         }\n//       }\n//     }\n//   }\n\n//   function offset(el) {\n//     const rect = el.getBoundingClientRect(),\n//       scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\n//       scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n//     return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\n//   }\n\n//   //Right now animation start type:\n//   // animOnScroll();\n\n//   //Delay start animation type:\n//   setTimeout(() => {\n//     animOnScroll();\n//   }, 1000);\n// }\n\n//sub menu\ndocument.addEventListener('click', documentActions);\nconst menuBlocks = document.querySelectorAll('.sub-menu-catalog__block');\nif (menuBlocks.length) {\n  menuBlocks.forEach((menuBlock) => {\n    const menuBlockItems = menuBlock.querySelectorAll('.sub-menu-catalog__category').length;\n    menuBlock.classList.add(`sub-menu-catalog__block_${menuBlockItems}`);\n  });\n}\n\nfunction documentActions(e) {\n  const targetElement = e.target;\n  if (targetElement.closest('[data-parent]')) {\n    const subMenuId = targetElement.dataset.parent ? targetElement.dataset.parent : null;\n    const subMenu = document.querySelector(`[data-submenu=\"${subMenuId}\"]`);\n    const catalogMenu = document.querySelector('.catalog-header');\n\n    if (subMenu) {\n      const activeLink = document.querySelector('._sub-menu-active');\n      const activeBlock = document.querySelector('._sub-menu-open');\n      if (activeLink && activeLink !== targetElement) {\n        activeLink.classList.remove('_sub-menu-active');\n        activeBlock.classList.remove('_sub-menu-open');\n      }\n      targetElement.classList.toggle('_sub-menu-active');\n      subMenu.classList.toggle('_sub-menu-open');\n    } else {\n      console.log('err');\n    }\n\n    e.preventDefault();\n  }\n}\n\n\n//# sourceURL=webpack://layogulp/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;